on:
  pull_request:
    branches:
      - devel

jobs:
  master_merge:
    runs-on: ubuntu-latest
    name: Builds, tests, and stores images on merges into master
    steps:
      - uses: actions/checkout@v1

      #- name: Install build server requirements
      #  run: |
      #    sudo apt-get install python3-setuptools
      #    pip3 install -r requirements/build_requirements.txt

      #- name: Run the installer to build and test the containers
      #  run: |
      #    cd installer/
      #    ansible-playbook -i inventory install.yml -e \
      #      'ansible_python_interpreter=/usr/bin/python3
      #      build_images=true deploy_app=true
      #      deployment=compose test_mode=unit'

      #- name: Pause until containers finish testing
      #  run: |
      #    while true; do
      #      num_done="$(docker ps -a --filter name='recommender_*' \
      #         --filter status='exited' --format '{{.Names}}'  | wc -l)"
      #      if [ "$num_done" == "2" ]; then
      #        exit 0
      #      else
      #        echo "Waiting for containers to come down"
      #        sleep 5
      #      fi
      #    done

      - name: Determine results of test stage
        run: |
          docker ps -a --filter name='recommender_*' --filter status='exited' --format '{{.Names}}' | xargs -t docker inspect --format='{{.State.ExitCode}}'

        #statuses="$(docker ps -a --filter name='recommender_*' \
        #  --filter status='exited' --format '{{.Names}}' | xargs -L1  docker inspect --format='{{.State.ExitCode}}')"
        #success_count="$(echo $statuses | grep '0' | wc -l)"
        #if [ "$success_count" == "2" ]; then
        #    echo success; exit 0
        #else
        #    echo failure; exit 1
        #fi

      - name: Push the built images to DockerHub
        env:
          DTR_TOKEN: ${{ secrets.DTR_LOGIN_TOKEN }}
          DTR_USER: konkolorado
        run: |
          echo $DTR_TOKEN | docker login --username $DTR_USER --password-stdin
          docker images --filter=reference='*/recommender_*' \
            --format "{{.Repository}}:{{.Tag}}" | xargs -L1 docker push
          docker logout
